**This question uses the Banker's Algorithm.**

ALLOCATION MATRIX:

+----+---+---+---+---+
|    | A | B | C | D |
+----+---+---+---+---+
| P0 | 2 | 0 | 0 | 1 |
| P1 | 3 | 1 | 2 | 1 |
| P2 | 2 | 1 | 0 | 3 |
| P3 | 1 | 3 | 1 | 2 |
| P4 | 1 | 4 | 3 | 2 |
+----+---+---+---+---+

As per the given ALLOCATION and MAX matrices, the NEED matrix is as follows:

(NEED[i, j] = MAX[i, j] - ALLOCATION[i, j])

+----+---+---+---+---+
|    | A | B | C | D |
+----+---+---+---+---+
| P0 | 2 | 2 | 1 | 1 |
| P1 | 2 | 1 | 3 | 1 |
| P2 | 0 | 2 | 1 | 3 |
| P3 | 0 | 1 | 1 | 2 |
| P4 | 2 | 2 | 3 | 3 |
+----+---+---+---+---+

Stage 1.
========

Availability = [ 3 3 2 1 ]

* At this stage, only P0's requirements can be met.
* P0 is allocated resources, executes, frees resources.

Now, Availability:  [ 3 3 2 1 ]
                  + [ 2 0 0 1 ]
                  _____________
                  = [ 5 3 2 2 ]

Stage 2.
========

Availability = [ 5 3 2 2 ]

* At this stage, P3's requirements can be met.
* P3 is allocated resources, executes, frees resources.

Now, Availability:  [ 5 3 2 2 ]
                  + [ 1 3 1 2 ]
                  _____________
                  = [ 6 6 3 4 ]

Stage 3.
========

Now, Availability = [ 6 6 3 4 ]

* At this stage, P1's requirements can be met.
* P1 is allocated resources, executes, frees resources.

Now, Availability:  [ 6 6 3 4 ]
                  + [ 3 1 2 1 ]
                  _____________
                  = [ 9 7 5 5 ]

Stage 4.
========

Now, Availability = [ 9 7 5 5 ]

* At this stage, P2's requirements can be met.
* P3 is allocated resources, executes, frees resources.

Now, Availability:  [  9 7 5 5 ]
                  + [  2 1 0 3 ]
                  _____________
                  = [ 11 8 5 8 ]

Stage 5.
========

Now, Availability = [ 11 8 5 8 ]

* At this stage, P4's requirements can be met.
* P4 is allocated resources, executes, frees resources.

Now, Availability:  [ 11  8 5  8 ]
                  + [  1  4 3  2 ]
                  ________________
                  = [ 12 12 8 10 ]

Conclusion.
===========

* Since all processes, { P0, P1, P2, P3, P4 }, can be completed, the system is in a safe state.
* One of the safe orders to present is: P0->P3->P1->P2->P4
